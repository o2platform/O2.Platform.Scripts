IntPtr firefoxHandle = default(IntPtr);
IntPtr chromeHandle = default(IntPtr);
IntPtr ieHandle = default(IntPtr);

Process firefoxProcess = null;
Process chromeDriverProcess = null;
Process ieDriverProcess = null;

Func<int, Process> getProcessWithParentHandle = 
	(processId)=>{						
						var selectQuery = "Select ProcessId from Win32_Process Where ParentProcessId = {0}".format(processId);;
						foreach(var proc in new ManagementObjectSearcher(selectQuery).Get())
						{	
							var procId = (int)(UInt32)proc["ProcessId"];
							var foundProcess = procId.process_WithId();
							"foundProcess: {0}".debug(foundProcess);
							return foundProcess;							
						};
						"Failed to find process with id: {0}".error(processId);
						return null;
				   };
						 
Func<IntPtr, IWebDriver> setup_Firefox =
	(targetHandle)=> {
						"[setup_Firefox] start".info();
						var selenium = new API_Selenium();
						selenium.setTarget_Firefox();	
						firefoxProcess = "firefox".process_WithName();			
						firefoxHandle = firefoxProcess.MainWindowHandle;
						firefoxHandle.setParent(targetHandle);
						WinAPI.ShowWindow(firefoxHandle, WinAPI.ShowWindowCommands.ShowMaximized);	
						"[setup_Firefox] done".info();
						return selenium.WebDriver; 						
					};


Func<IntPtr, IWebDriver> setup_Chrome =
	(targetHandle)=>{
						"[setup_Chrome] start".info();
						var selenium = new API_Selenium();
						selenium.setTarget_Chrome();
						chromeDriverProcess = "ChromeDriver".process_WithName();												
						chromeHandle= getProcessWithParentHandle(chromeDriverProcess.Id).MainWindowHandle;
						chromeHandle.setParent(targetHandle);
						WinAPI.ShowWindow(chromeHandle, WinAPI.ShowWindowCommands.ShowMaximized);													
						"[setup_Chrome] done".info();
						return selenium.WebDriver; 			 			
					};
Func<IntPtr, IWebDriver> setup_IE =
	(targetHandle)=>{
						"[setup_IE] start".info();
						var selenium = new API_Selenium();
						selenium.setTarget_IE();
						ieDriverProcess = "IEDriverServer".process_WithName();												
						ieHandle= getProcessWithParentHandle(ieDriverProcess.Id).MainWindowHandle;
						ieHandle.setParent(targetHandle);
						WinAPI.ShowWindow(ieHandle, WinAPI.ShowWindowCommands.ShowMaximized);
						"[setup_IE] end".info();
						return selenium.WebDriver; 						
					};

//"Selenium_InternetExplorerDriver".o2Cache(null);
"Selenium_ChromeDriver".o2Cache(null);
"Selenium_FirefoxDriver".o2Cache(null);
"Selenium_InternetExplorerDriver".o2Cache(null);

var targetPanel = "hijack".popupWindow(1000,600);

targetPanel.onClosed(
	()=>{			
			firefoxProcess.stop();
			chromeDriverProcess.stop();
			ieDriverProcess.stop();
			"Selenium_ChromeDriver".o2Cache(null);
			"Selenium_FirefoxDriver".o2Cache(null);
			"Selenium_InternetExplorerDriver".o2Cache(null);
		});
		
/*targetPanel.insert_ActionPanel()
		   .add_Link("close",()=>{
									fireFoxHandle.setParent(IntPtr.Zero);
									chromeHandle.setParent(IntPtr.Zero);
									
									targetPanel.parentForm().close();
								 });
*/

var fireFoxPanel = targetPanel.insert_Left(150,"Firefox");
var chromePanel	 = targetPanel.insert_Right(150,"Chrome");
var iePanel 	 = targetPanel.title("Chrome").add_Panel();
var script 	 	 = targetPanel.insert_Script();

targetPanel.parentForm().alwaysOnTop();

targetPanel.Resize+=(sender,e)=>{	 
									ieHandle.resizeWindowToControlSize(iePanel,0,0);
									chromeHandle.resizeWindowToControlSize(chromePanel,0,0);
									firefoxHandle.resizeWindowToControlSize(fireFoxPanel,0,0);									
	 							};		
	

var codeSnippet = 
@"Action<string> openInAllBrowsers =
	(url)=> {
				chrome.Navigate().GoToUrl(url);
				firefox.Navigate().GoToUrl(url);
				ie.Navigate().GoToUrl(url);
			};
openInAllBrowsers(""http://www.google.com"");
//openInAllBrowsers(""http://www.whatismybrowser.com/"");
//openInAllBrowsers(""http://localhost:12121/"");

return ""done"";
//O2Ref:Selenium\net40\WebDriver.dll
";
			
var ieDriver	  = setup_IE(iePanel.handle());
var firefoxDriver = setup_Firefox(fireFoxPanel.handle());
var chromeDriver  = setup_Chrome(chromePanel.handle());
			
script.set_Code(codeSnippet);
script.add_InvocationParameter("chrome", chromeDriver);
script.add_InvocationParameter("firefox", firefoxDriver);
script.add_InvocationParameter("ie", ieDriver);

return "done";

//using OpenQA.Selenium
//using System.Management
//using System.Diagnostics
 
//O2File:API_WinAPI.cs
//O2File:API_WinAPI_ExtensionMethods.cs
//O2File:API_Selenium.cs
//O2File:SeleniumWebDrivers_Setup.cs

//O2Ref:System.Management.dll
//O2Ref:Selenium\net40\WebDriver.dll